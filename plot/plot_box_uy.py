import matplotlib.pyplot as pltfrom matplotlib.pyplot import MultipleLocatorfont_titles = {'family': 'Times New Roman',        'color':  'black',        'weight': 'normal',        'size': 8,}font_labels = {'family': 'Times New Roman',        'color':  'black',        'weight': 'normal',        'size': 8,}import numpy as nptime_scale = np.arange(0.01,0.51,0.01)xticks=[0,10,20,30,40,50]lable=[0,0.1,0.2,0.3,0.4,0.5]ytricks=[0,0.25,0.5,0.75,0.1]mae_hybrid_model_close_training=np.load('mae_error_hybrid_model.npy')mae_seq2seq_model_close_training=np.load('mae_error_seq2seq_model.npy')plt.figure(dpi=120,figsize=(12,3.3))plt.subplot(121)plt.xlabel('Predicted Horizens (s)',fontdict=font_labels)plt.ylabel('$||e_{uy,k}||$ (m/s)',fontdict=font_labels)plt.grid(True,alpha=0.4)plt.title('Distribution of $||e_{uy,k}||$,Hybrid model',font_titles)uy_mae_hybrid_model_close_training=mae_hybrid_model_close_training[:,:,0:1].reshape(-1,50)uy_mae_seq2seq_model_close_training=mae_seq2seq_model_close_training[:,:,0:1].reshape(-1,50)r_mae_hybrid_model_close_training=mae_hybrid_model_close_training[:,:,1:2].reshape(-1,50)r_mae_seq2seq_model_close_training=mae_seq2seq_model_close_training[:,:,1:2].reshape(-1,50)plt.boxplot(uy_mae_hybrid_model_close_training[:,0:50],showfliers=False,boxprops = {'color':'blue',},whiskerprops={'linestyle':'--','dashes':(5,3)})y_major_locator=MultipleLocator(0.25)ax=plt.gca()ax.yaxis.set_major_locator(y_major_locator)plt.xticks(xticks,labels=lable)y_major_locator=MultipleLocator(0.04)ax=plt.gca()ax.yaxis.set_major_locator(y_major_locator)plt.tick_params(labelsize=8)plt.ylim(0,0.1)plt.subplot(122)plt.xlabel('Predicted Horizens (s)',fontdict=font_labels)plt.ylabel('$||e_{uy,k}||$ (m/s)',fontdict=font_labels)plt.grid(True,alpha=0.4)plt.title('Distribution of $||e_{uy,k}||$,GRU Encoder-Decoder',font_titles)plt.boxplot(uy_mae_seq2seq_model_close_training[:,0:50],showfliers=False,boxprops = {'color':'blue',},whiskerprops={'linestyle':'--','dashes':(5,3)})plt.xticks(xticks,labels=lable)y_major_locator=MultipleLocator(0.04)ax=plt.gca()ax.yaxis.set_major_locator(y_major_locator)plt.tick_params(labelsize=8)plt.ylim(0,0.1)plt.show()